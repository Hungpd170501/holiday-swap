server:
  port: 8080
  error:
    include-stacktrace: never

spring:
  datasource:
    url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:5432/holiday-swap
    username: holiday-swap
    password: password
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_nationalized_character_data: true
    show-sql: true
  rabbitmq:
    addresses: ${RABBITMQ_HOST:localhost}:5672
    stomp:
      port: 61613
  mail:
    host: smtp.gmail.com
    port: 587
    protocol: smtp
    username: ${EMAIL_USERNAME:holidayswap.noreply@gmail.com}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 30MB
      max-request-size: 30MB
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          facebook:
            client-id: ${OAUTH2_FB_CLIENT_ID}
            client-secret: ${OAUTH2_FB_CLIENT_SECRET}
            scope:
              - email
              - public_profile
          github:
            client-id: ${OAUTH2_GITHUB_CLIENT_ID}
            client-secret: ${OAUTH2_GITHUB_CLIENT_SECRET}
  flyway:
    enabled: true
    baseline-on-migrate: true
    user: holiday-swap
    password: password

logging:
  level:
    org:
      hibernate: error

rabbitmq:
  host: ${RABBITMQ_HOST:localhost}
  exchanges:
    internal: internal.exchange
  queues:
    email: email.queue
  routing-keys:
    internal-email: internal.email.routing-key

mail:
  debug: true

redis:
  host: ${REDIS_HOST:localhost}
  port: 6379

amazon:
  s3:
    bucket:
      name: holiday-swap-file-resouces
  aws:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}

twilio:
  account_sid: ${TWILIO_ACCOUNT_SID}
  auth_token: ${TWILIO_AUTH_TOKEN}
  trial_number: ${TWILIO_TRIAL_NUMBER}

application:
  host: ${HOST:localhost}
  base-url: ${BASE_URL:http://localhost:8080}
  security:
    jwt:
      secret-key: ${JWT_SECRET}
      expiration: ${JWT_EXPIRATION:2592000000} #30 days
      access-token:
        expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:1800000} #30 minutes
      refresh-token:
        expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:1296000000} #15 days